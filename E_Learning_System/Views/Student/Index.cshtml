@using Syncfusion.EJ2


@Html.EJS().Grid("Grid").DataSource(dataManager =>
{
    dataManager.Url("/Student/UrlDatasource").InsertUrl("/Student/Save").UpdateUrl("/Student/Save").RemoveUrl("/Student/Delete").Adaptor("UrlAdaptor");
}).ActionComplete("actionComplete").AllowPdfExport().AllowExcelExport().ToolbarClick("toolbarClick").PdfExportComplete("pdfExportComplete").ExcelExportComplete("excelExportComplete").Columns(col =>
{

    col.Field("StudentId").HeaderText("StudentId").IsPrimaryKey(true).Visible(false).Add();
    col.Field("FirstName").HeaderText("FirstName").Add();
    col.Field("LastName").HeaderText("LastName").Add();
    col.Field("email").HeaderText("Email").Add();
    col.Field("Telephone").HeaderText("Telephone").Add();
    col.Field("StreetAddress").HeaderText("StreetAddress").Add();

}).AllowPaging().AllowSorting().AllowFiltering().FilterSettings(fliter => { fliter.Type(Syncfusion.EJ2.Grids.FilterType.Menu); }).AllowPdfExport().AllowExcelExport().PageSettings(page => page.PageSize(10)).EditSettings(edit =>
{ edit.AllowAdding(true).AllowEditing(true).AllowDeleting(true).Mode(Syncfusion.EJ2.Grids.EditMode.Dialog).Template("#dialogtemplate"); }).Toolbar(new List<string>
    () { "Add", "Edit", "Delete", "Print", "PdfExport","ExcelExport" }).Render()

    <script>
        function toolbarClick(args) {
            var gridObj = document.getElementById("Grid").ej2_instances[0];
            if (args.item.id === 'Grid_pdfexport') {
                gridObj.showSpinner();
                gridObj.pdfExport();
            }
            else if (args.item.id === 'Grid_excelexport') {
                gridObj.showSpinner();
                gridObj.excelExport();
            }
        }
        function pdfExportComplete(args) {
            this.hideSpinner();
        }
        function excelExportComplete(args) {
            this.hideSpinner();
        }
        function actionComplete(args) {
            console.log(args.rowData);
            if (args.requestType === 'insert') {

            }
            if (args.requestType === 'beginEdit') {
                var ajax = new ej.base.Ajax({
                    url: "/Student/CreatEditpartial", //render the partial view
                    type: "POST",
                    contentType: "application/json",
                    data: JSON.stringify({ value: args.rowData })
                });
                console.log(args.rowData);
                ajax.send().then(function (data) {
                    $("#dialogTemp").html(data); //Render the edit form with selected record
                    args.form.elements.namedItem('FirstName').focus();
                }).catch(function (xhr) {
                    console.log(xhr);
                });
            }
            if (args.requestType === 'add') {
                var ajax = new ej.base.Ajax({
                    url: "/Student/CreatEditpartial", //render the partial view
                    type: "POST",
                    contentType: "application/json",
                });
                ajax.send().then(function (data) {
                    $("#dialogTemp").html(data); //Render the edit form with selected record
                    args.form.elements.namedItem().focus();
                }).catch(function (xhr) {
                    console.log(xhr);
                });
            }
        }
    </script>

    <script id='dialogtemplate' type="text/x-template">
        <div id="dialogTemp">
        </div>
    </script>
